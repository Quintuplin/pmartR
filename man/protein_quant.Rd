% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/protein_quant.R
\name{protein_quant}
\alias{protein_quant}
\title{protein_quant wrapper function}
\usage{
protein_quant(pepData, method, isoformRes = NULL, qrollup_thresh = NULL,
  single_pep = FALSE, single_observation = FALSE, combine_fn = "median",
  use_parallel = TRUE)
}
\arguments{
\item{pepData}{an omicsData object of the class 'pepData'.}

\item{method}{is one of four protein quantitation methods, 'rollup', 'rrollup', 'qrollup' and 'zrollup'. When 'rollup' is selected, combine_fn must also be provided and will determine whether pquant_mean or pquant_median function will be used.}

\item{isoformRes}{is a list of data frames, the result of applying the 'bpquant_loop' function to original pepData object. Defaults to NULL.}

\item{qrollup_thresh}{is a numeric value; is the peptide abundance cutoff value. Is an argument to qrollup function.}

\item{single_pep}{logical indicating whether or not to remove proteins that have just a single peptide mapping to them, defaults to FALSE.}

\item{single_observation}{logical indicating whether or not to remove peptides that have just a single observation, defaults to FALSE.}

\item{combine_fn}{can either be 'mean' or 'median'.}

\item{use_parallel}{logical indicating whether or not to use "doParallel" loop in applying rollup functions. Defaults to TRUE. Is an argument of rrollup, qrollup and zrollup functions.}
}
\value{
an omicsData object of the class 'proData'
}
\description{
This function takes in a pepData object, method (quantitation method, mean, median or rrollup), and the optional argument isoformRes (defaults to NULL). An object of the class 'proData' is returned.
}
\details{
If isoformRes is provided then, a temporary pepData object is formed using the isoformRes information as the e_meta component and the original pepData object will be used for e_data and f_data components. The emeta_cname for the temporary pepData object will be the âprotein_isoformâ column of isoformRes. Then one of the three 'method' functions can be applied to the temporary pepData object to return a proData object. If isofromRes is left NULL, then depending on the input for 'method', the correct 'method' function is applied directly to the input pepData object and a proData object is returned.
}
\examples{
dontrun{
library(pmartRdata)
data("pep_object")

case where isoformRes is NULL:
results<- prot_quant(pepData = pep_object, method = 'rollup', combine_fn = 'median', isoformRes = NULL)

case where isoformRes is provided:
results2 = prot_quant(pep_data = pep_object, method = 'rollup', combine_fn = 'mean', isoformRes = isoformRes_object)
}

}
